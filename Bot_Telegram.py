import telebot

from bs4 import BeautifulSoup
import requests

from telebot import types

bot = telebot.TeleBot("2041476775:AAFXO2UlfuYN5xDJctDRIDGAVzev1MBoApA")


markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

tovar = types.KeyboardButton("üõí–¢–æ–≤–∞—Ä")
videoobzor = types.KeyboardButton("üìπ–í–∏–¥–µ–æ-–æ–±–∑–æ—Ä")
otziv = types.KeyboardButton("‚úç–û—Ç–∑—ã–≤—ã")
exit = types.KeyboardButton("‚ùå–í—ã—Ö–æ–¥")

markup.add(tovar, videoobzor, otziv, exit)


mag_markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

dns_m = types.KeyboardButton("üè™–î–ù–°")
mvideo_m = types.KeyboardButton("üè™–ú–≤–∏–¥–µ–æ")
eldorado_m = types.KeyboardButton("üè™–≠–ª—å–¥–æ—Ä–∞–¥–æ")
citilink_m = types.KeyboardButton("üè™–°–∏—Ç–∏–ª–∏–Ω–∫")
e_catalog_m = types.KeyboardButton("üè™–ï-–ö–∞—Ç–∞–ª–æ–≥")

mag_markup.add(dns_m, mvideo_m, eldorado_m, citilink_m, e_catalog_m, exit)


mark_s = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

st = types.KeyboardButton("Start")

mark_s.add(st)


mark_c = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

min_c = types.KeyboardButton("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞")

mark_c.add(min_c)


yes_n_mark = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

yes = types.KeyboardButton("Yes")
no = types.KeyboardButton("No")

yes_n_mark.add(yes, no)

S_or_E = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

S_or_E.add(st, exit)


@bot.message_handler(content_types=['text'])
def Start_F(message):
    while message.text == '–ü—Ä–∏–≤–µ—Ç' or message.text == 'Hello' or message.text == 'Hi' \
            or message.text == '–ü—Ä–∏–≤–µ—Ç–∏–∫' or message.text == '–ø—Ä–∏–≤–µ—Ç' or message.text == 'hello' or message.text == 'hi' \
            or message.text == '–ø—Ä–∏–≤–µ—Ç–∏–∫' or message.text == 'Start' or message.text == 'start':
        bot.send_message(message.chat.id,
                         "–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n–Ø- –ë–æ—Ç <b>{1.first_name}</b>. –Ø  –ø–æ–º–æ–≥—É –≤—ã–±—Ä–∞—Ç—å —Ç–µ–±–µ —Ç–æ–≤–∞—Ä."
                         "\n–î–∞–≤–∞–π –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è, —á—Ç–æ —Ç—ã —Ö–æ—Ç–µ–ª –±—ã –Ω–∞–π—Ç–∏."
                         "\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä, –≤–≤–µ–¥–∏—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ 'üõí–¢–æ–≤–∞—Ä'"
                         "\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ–æ–±–∑–æ—Ä, –≤–≤–µ–¥–∏—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ 'üìπ–í–∏–¥–µ–æ-–æ–±–∑–æ—Ä'"
                         "\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ—Ç–∑—ã–≤—ã –ø–æ —Ç–æ–≤–∞—Ä—É –≤–≤–µ–¥–∏—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ '‚úç–û—Ç–∑—ã–≤—ã'"
                         .format(message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)
        bot.register_next_step_handler(message, Function_selection)
        break
    else:
        bot.send_message(message.chat.id,
                         "{0.first_name}, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—è —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª, "
                         "–æ–±—â–∞—Ç—Å—è —Å–æ –º–Ω–æ–π —Å–ª–µ–¥—É–µ—Ç —Ç–æ–ª—å–∫–æ –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—ã.".format(message.from_user,
                                                                                    bot.get_me()), parse_mode='html',
                         reply_markup=mark_s)


def Function_selection(message):
    if message.text == 'üõí–¢–æ–≤–∞—Ä' or message.text == '–¢–æ–≤–∞—Ä'.lower() or message.text == '–í—ã–±–æ—Ä —Ç–æ–≤–∞—Ä–∞'.lower():
        bot.send_message(message.chat.id, 'üè™–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω –≤–≤–µ–¥—è –∏–ª–∏ –Ω–∞–∂–∞–≤ –∂–µ–ª–∞–µ–º—ã–π –º–∞–≥–∞–∑–∏–Ω –∏–ª–∏ –Ω–∞–∂–∞–≤ "‚ùå–í—ã—Ö–æ–¥" –ø–æ–∫–∏–Ω—É—Ç—å –ø–æ–∏—Å–∫.'
                                          '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—â–µ–Ω–∏–µ, —Ç–æ –≤–≤–µ–¥–∏—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "‚ùå–í—ã—Ö–æ–¥"',
                         reply_markup=mag_markup)
        bot.register_next_step_handler(message, Shop_selection)
    elif message.text == 'üìπ–í–∏–¥–µ–æ-–æ–±–∑–æ—Ä' or message.text == '–í–∏–¥–µ–æ-–æ–±–∑–æ—Ä'.lower() or message.text == '–í–∏–¥–µ–æ–æ–±–∑–æ—Ä'.lower() \
            or message.text == '–û–±–∑–æ—Ä'.lower():
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Ç–æ–≤–∞—Ä, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –Ω–∞–π—Ç–∏ –≤–∏–¥–µ–æ–æ–±–∑–æ—Ä.')
        bot.register_next_step_handler(message, Video_print)

    elif message.text == '‚úç–û—Ç–∑—ã–≤—ã' or message.text == '–û—Ç–∑—ã–≤—ã':
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Ç–æ–≤–∞—Ä, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –Ω–∞–π—Ç–∏ –æ—Ç–∑—ã–≤.')
        bot.register_next_step_handler(message, Otziv_print)
    elif message.text == '‚ùå–í—ã—Ö–æ–¥' or message.text == '–í—ã—Ö–æ–¥' or message.text == '–≤—ã—Ö–æ–¥':
        bot.send_message(message.chat.id, '–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á, {0.first_name}! '
                                          '–î–ª—è –Ω–∞—á–∞–ª–∞ –æ–±—â–µ–Ω–∏—è '
                                          '–≤–æ—Å–ø–ª—å–∑—É–π—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π-–ø–æ–¥—Å–∫–∞–∑–∫–æ–π, –Ω–∞–∂–∞–≤ –Ω–∞ "Start".'.format(message.from_user,
                                          bot.get_me()), parse_mode='html', reply_markup=mark_s)


def Shop_selection(message):
    text_soobsh = '–ù–∞–ø–∏—à–∏—Ç–µ –º–æ–¥–µ–ª—å —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –∂–µ–ª–∞–µ—Ç–µ –∫—É–ø–∏—Ç—å.'
    if message.text == 'üè™–î–ù–°' or message.text == '–î–ù–°' or message.text == '–î–Ω—Å':
        bot.send_message(message.chat.id, text_soobsh)
        bot.register_next_step_handler(message, Dns_product)
    elif message.text == 'üè™–ú–≤–∏–¥–µ–æ' or message.text == '–ú–≤–∏–¥–µ–æ':
        bot.send_message(message.chat.id, text_soobsh)
        bot.register_next_step_handler(message, Mvideo_product)
    elif message.text == 'üè™–≠–ª—å–¥–æ—Ä–∞–¥–æ' or message.text == '–≠–ª—å–¥–æ—Ä–∞–¥–æ':
        bot.send_message(message.chat.id, text_soobsh)
        bot.register_next_step_handler(message, Eldorado_product)
    elif message.text == 'üè™–°–∏—Ç–∏–ª–∏–Ω–∫' or message.text == '–°–∏—Ç–∏–ª–∏–Ω–∫':
        bot.send_message(message.chat.id, text_soobsh)
        bot.register_next_step_handler(message, Citilink_product)
    elif message.text == 'üè™–ï-–ö–∞—Ç–∞–ª–æ–≥' or message.text == '–ï-–ö–∞—Ç–∞–ª–æ–≥' or message.text == '–ï–ö–∞—Ç–∞–ª–æ–≥':
        bot.send_message(message.chat.id, text_soobsh + ' –ú–∞—Ä–∫—É —Ç–æ–≤–∞—Ä–∞ –ø–∏—Å–∞—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ –∏ –±–µ–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤.'
                                                        ' –ü—Ä–∏–º–µ—Ä –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤:'
                                                        ' –ú–æ–Ω–∏—Ç–æ—Ä, –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏ —Ç.–¥.')
        bot.register_next_step_handler(message, E_Katalog)
    elif message.text == '‚ùå–í—ã—Ö–æ–¥' or message.text == '–í—ã—Ö–æ–¥' or message.text == '–≤—ã—Ö–æ–¥':
        bot.send_message(message.chat.id, '–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á, {0.first_name}! '
                                          '–î–ª—è –Ω–∞—á–∞–ª–∞ –æ–±—â–µ–Ω–∏—è '
                                          '–≤–æ—Å–ø–ª—å–∑—É–π—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π-–ø–æ–¥—Å–∫–∞–∑–∫–æ–π, –Ω–∞–∂–∞–≤ –Ω–∞ "Start".'.format(message.from_user,
                                          bot.get_me()), parse_mode='html', reply_markup=mark_s)


@bot.message_handler(content_types=['text'])
def Dns_product(message):
    slova_polz = message.text
    corect_slov_polz = slova_polz.replace(" ", '+')
    corect_url = f"https://www.dns-shop.ru/search/?q={corect_slov_polz}"
    bot.send_message(message.chat.id, '–í–æ—Ç –ø–æ–¥–±–æ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –î–ù–°'
                                          f' :{corect_url}. –ï—Å–ª–∏ –≤—ã –∂–µ–ª–∞–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—É –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –¥—Ä—É–≥–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞, '
                                          ' –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π-–ø–æ–¥—Å–∫–∞–∑–∫–æ–π, –Ω–∞–∂–∞–≤ –Ω–∞ "–õ—É—á—à–∞—è —Ü–µ–Ω–∞"', reply_markup=mark_c)
    bot.register_next_step_handler(message, min_a_max)


def Mvideo_product(message):
    slova_polz = message.text
    corect_slov_polz = slova_polz.replace(" ", '%20')
    corect_url = f"https://www.mvideo.ru/product-list-page?q={corect_slov_polz}"
    bot.send_message(message.chat.id, '–í–æ—Ç –ø–æ–¥–±–æ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –ú–í–ò–î–ï–û'
                                      f' :{corect_url}. –ï—Å–ª–∏ –≤—ã –∂–µ–ª–∞–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—É –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –¥—Ä—É–≥–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞, '
                                          ' –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π-–ø–æ–¥—Å–∫–∞–∑–∫–æ–π, –Ω–∞–∂–∞–≤ –Ω–∞ "–õ—É—á—à–∞—è —Ü–µ–Ω–∞"', reply_markup=mark_c)
    bot.register_next_step_handler(message, min_a_max)

def Eldorado_product(message):
    slova_polz = message.text
    corect_slov_polz = slova_polz.replace(" ", '%20')
    corect_url = f"https://www.eldorado.ru/search/catalog.php?q={corect_slov_polz}"
    bot.send_message(message.chat.id, '–í–æ—Ç –ø–æ–¥–±–æ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –≠–õ–¨–î–û–†–ê–î–û'
                                      f' :{corect_url}. –ï—Å–ª–∏ –≤—ã –∂–µ–ª–∞–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—É –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –¥—Ä—É–≥–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞, '
                                          ' –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π-–ø–æ–¥—Å–∫–∞–∑–∫–æ–π, –Ω–∞–∂–∞–≤ –Ω–∞ "–õ—É—á—à–∞—è —Ü–µ–Ω–∞"', reply_markup=mark_c)
    bot.register_next_step_handler(message, min_a_max)


def Citilink_product(message):
    slova_polz = message.text
    corect_slov_polz = slova_polz.replace(" ", '+')
    corect_url = f"https://www.citilink.ru/search/?text={corect_slov_polz}&menu_id=162"
    bot.send_message(message.chat.id, '–í–æ—Ç –ø–æ–¥–±–æ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –°–ò–¢–ò–õ–ò–ù–ö'
                                      f' :{corect_url}. –ï—Å–ª–∏ –≤—ã –∂–µ–ª–∞–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—É –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –¥—Ä—É–≥–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞, '
                                          ' –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π-–ø–æ–¥—Å–∫–∞–∑–∫–æ–π, –Ω–∞–∂–∞–≤ –Ω–∞ "–õ—É—á—à–∞—è —Ü–µ–Ω–∞"', reply_markup=mark_c)
    bot.register_next_step_handler(message, min_a_max)


def min_a_max(message):
    if message.text == "–õ—É—á—à–∞—è —Ü–µ–Ω–∞" or message.text == "–õ—Ü–µ–Ω–∞" or message.text == "Best price" \
            or message.text == "best prise" or message.text == "–ª—É—á—à–∞—è —Ü–µ–Ω–∞" or message.text == "–ª—Ü–µ–Ω–∞":
        bot.send_message(message.chat.id, ' –ú–∞—Ä–∫—É —Ç–æ–≤–∞—Ä–∞ –ø–∏—Å–∞—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ –∏ –±–µ–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤.'
                                                        ' –ü—Ä–∏–º–µ—Ä –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤:'
                                                        ' –ú–æ–Ω–∏—Ç–æ—Ä, –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏ —Ç.–¥.')
        bot.register_next_step_handler(message, E_Katalog)


def E_Katalog(message):
    global corect_url
    slova_polz = message.text
    corect_slov_polz = slova_polz.upper().replace(" ", '-')
    corect_url = f"https://www.e-katalog.ru/{corect_slov_polz}.htm"

    def get_h(url, params=None):
        req = requests.get(url, params=params)
        return req

    def get_c(html1):
        soup = BeautifulSoup(html1, 'html.parser')
        items = soup.find_all('div', class_="common-table-div")

        tov = []

        for item in items:
            tov.append({
                'name_t': item.find('h1', itemprop="name").get_text(),
                'l_price': item.find('span', itemprop="lowPrice").get_text().replace('\xa0', ' '),
                'h_price': item.find('span', itemprop="highPrice").get_text().replace('\xa0', ' ')
            })
        return tov

    def parse():
        html1 = get_h(corect_url)
        if html1.status_code == 200:
            tov = get_c(html1.text)
            for i in range(len(tov)):
                propars_tov = tov[i]
                ima_tov = propars_tov['name_t']
                min_cena_tov = propars_tov['l_price']
                max_cena_tov = propars_tov['h_price']
            bot.send_message(message.chat.id, "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –Ω–∞–π–¥–µ–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞"
                                              f" {ima_tov}: {min_cena_tov} —Ä—É–±. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è: {max_cena_tov} —Ä—É–±."
                                              " –ñ–µ–ª–∞–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å —Å—Å—ã–ª–∫—É? –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π-–ø–æ–¥—Å–∫–∞–∑–∫–æ–π"
                                              ", –≤—ã–±—Ä–∞–≤ '–õ—É—á—à–∞—è —Ü–µ–Ω–∞'", reply_markup=yes_n_mark)
            bot.register_next_step_handler(message, yes_or_no)
        else:
            bot.send_message(message.chat.id, 'ERROR')

    parse()


def yes_or_no(message):
    if message.text == 'Yes' or message.text == '–î–∞':
        bot.send_message(message.chat.id, f'–í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞: {corect_url}.', reply_markup=mark_s)
        bot.register_next_step_handler(message, Start_F)
    elif message.text == 'No' or message.text == '–ù–µ—Ç':
        bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ, –∂–µ–ª–∞–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?', reply_markup=S_or_E)
        bot.register_next_step_handler(message, Start_F)


def Video_print(message):
    slova_polz = message.text
    corect_slov_polz = slova_polz.lower().replace(" ", '+')
    corect_url = f"https://www.youtube.com/results?search_query={corect_slov_polz}"
    bot.send_message(message.chat.id, f"–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ–æ–±–∑–æ—Ä –ø–æ –∑–∞–ø—Ä–æ—Å—É {slova_polz}: {corect_url}."
                                      " –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π-–ø–æ–¥—Å–∫–∞–∑–∫–æ–π, –≤—ã–±—Ä–∞–≤"
                                      " 'üõí–¢–æ–≤–∞—Ä', 'üìπ–í–∏–¥–µ–æ-–æ–±–∑–æ—Ä', '‚úç–û—Ç–∑—ã–≤—ã' –∏ '‚ùå–í—ã—Ö–æ–¥'")


def Otziv_print(message):
    slova_polz = message.text
    corect_slov_polz = slova_polz.lower().replace(" ", '-')
    corect_url = f"https://www.e-katalog.ru/review/{corect_slov_polz}/"
    bot.send_message(message.chat.id, f"–°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ç–∑—ã–≤—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É {slova_polz}: {corect_url}."
                                      " –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π-–ø–æ–¥—Å–∫–∞–∑–∫–æ–π, –≤—ã–±—Ä–∞–≤"
                                      " 'üõí–¢–æ–≤–∞—Ä', 'üìπ–í–∏–¥–µ–æ-–æ–±–∑–æ—Ä', '‚úç–û—Ç–∑—ã–≤—ã' –∏ '‚ùå–í—ã—Ö–æ–¥'")


bot.polling(none_stop=True)